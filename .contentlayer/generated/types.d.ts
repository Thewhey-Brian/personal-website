// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  summary: string
  status: 'completed' | 'in-progress' | 'planned'
  role?: string | undefined
  stack: string[]
  repoUrl?: string | undefined
  demoUrl?: string | undefined
  images: string[]
  tags: string[]
  featured: boolean
  startDate?: IsoDateTimeString | undefined
  endDate?: IsoDateTimeString | undefined
  /** MDX file body */
  body: MDX
  url: string
  slug: string
}

export type Publication = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Publication'
  title: string
  abstract: string
  year: number
  venue: string
  doi?: string | undefined
  pdfUrl?: string | undefined
  codeUrl?: string | undefined
  slidesUrl?: string | undefined
  videoUrl?: string | undefined
  tags: string[]
  featured: boolean
  /** MDX file body */
  body: MDX
  url: string
  slug: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Project | Publication
export type DocumentTypeNames = 'Project' | 'Publication'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPublications: Publication[]
  allProjects: Project[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Project: Project
  Publication: Publication
}

export type NestedTypeMap = {

}

 